---
import Page from "../layouts/Page.astro";

async function getWeather() {
  const date = new Date();
  const oneHourAgo = new Date(date - 1000 * 60 * 60);
  const isoDate = date.toISOString();
  const isoOneHourAgo = oneHourAgo.toISOString();

  try {
    const res = await fetch(
      `https://api.brightsky.dev/weather?tz=Europe/Berlin&wmo_station_id=10384&date=${isoOneHourAgo}&last_date=${isoDate}`
    );
    const data = await res.json();

    const weatherCode = data.weather[0].icon;
    switch (weatherCode) {
      case 'clear-night':
      case 'partly-cloudy-night':
        return "starry ";
      case 'clear-day':
      case 'partly-cloudy-day':
        return "sunny ";
      case 'cloudy':
        return "cloudy ";
      case 'fog':
        return "foggy ";
      case 'wind':
        return "windy ";
      case 'rain':
        return "rainy ";
      case 'sleet':
        return "sleety ";
      case 'snow':
        return "snowy ";
      case 'hail':
        return "haily ";
      case 'thunderstorm':
        return "stormy ";
      default:
        throw new Error(`Weather code ${weatherCode} unknown`);
    }
  
    return weatherCode;
  }
  catch (error) {
    // TODO logging?
    return ""
  }
}

const weather = await getWeather();

const allPosts = Astro.fetchContent('./posts/*.md');
sortedPosts = allPosts.sort((a, b) => new Date(b.publishDate) - new Date(a.publishDate));
---

<Page>
  <h1 class="sr-only">Home</h1>
  <p class="text-large my-8 md:my-16">
    Hello from {weather} Berlin<span class="text-primary not-sr-only"></span> My name is <a href="/now">Robin</a>, and this is my website. Have a look around!
  </p>
  <h2 class="small-caps mb-2 md:mb-4 text-primary">Latest notes</h2>
  <section>
    <ul>
      {sortedPosts.map(p => (
        <li class="text-large mb-4 md:mb-6">
          <a href={p.url} class="not-small-caps">{p.title}</a>
        </li>
      ))}
    </ul>
  </section>
</Page>
